// Implements a palette with two main colors, --primary-color and --secondary-color

@use "sass:meta";
@use "sass:color";
@use "sass:map";
@use "colors/color-helpers" as colorHelpers;
@use "colors/color-vars" as color-vars;

$schemes: (
  "default": (
    "primary-color": #2a5ea4,
    "secondary-color": #932c1c,
  ),
  "blue-red": (
    "primary-color": #2a5ea4,
    "secondary-color": #932c1c,
  ),
  "blue-green": (
    "primary-color": #2a5ea4,
    "secondary-color": #28803f,
  ),
  "green-blue": (
    "primary-color": #1a602d,
    "secondary-color": #2a5ea4,
  ),
  "red-blue": (
    "primary-color": #932c1c,
    "secondary-color": #2a5ea4,
  ),
  "gray-blue": (
    "primary-color": #3e3e3e,
    "secondary-color": #3d71b5,
  ),
  "blue-gray": (
    "primary-color": #2a5ea4,
    "secondary-color": #3e3e3e,
  ),
  "grays": (
    "primary-color": #222222,
    "secondary-color": #6e6e6e,
  ),
  "greens": (
    "primary-color": #193e1c,
    "secondary-color": #347a3a,
  ),
  "purples": (
    "primary-color": hsl(321, 40%, 20%),
    "secondary-color": hsl(321, 60%, 32%),
  ),
  "blues": (
    "primary-color": hsl(217, 70%, 20%),
    "secondary-color": hsl(217, 43%, 37%),
  ),
);

$color-scheme: 'default' !default;

// if primary-color or secondary-color are not set, use the scheme colors
$primary-color: null !default;
$secondary-color: null !default;

@if $primary-color == null {
  $scheme-primary-color: map.get(map.get($schemes, $color-scheme), "primary-color");
  $primary-color: $scheme-primary-color;
}
@if $secondary-color == null {
  $scheme-secondary-color: map.get(map.get($schemes, $color-scheme), "secondary-color");
  $secondary-color: $scheme-secondary-color;
}

@debug "scheme: #{$color-scheme}, primary-color: #{$primary-color}, secondary-color: #{$secondary-color}";

// Start with values from color-vars
$colors: map.merge(
  color-vars.$colors, ()
);

// Compute color blends and add them as variables
$blends: colorHelpers.get-blends('primary-color');
$colors: map.merge(
  $colors,
  $blends
);
$blends: colorHelpers.get-blends('secondary-color');
$colors: map.merge(
  $colors,
  $blends
);

// Override some colors
$colors: map.merge(
  $colors,
  (
    "primary-color": $primary-color,
    "secondary-color": $secondary-color,

    "linkColor": var(--primary-color),
    "linkActive": var(--secondary-color),
    "linkBackground": var(--primary-color-white-97),
    "altLinkColor": var(--secondary-color-black-10),
    "altLinkActive": var(--secondary-color),
    "altLinkBackground": var(--secondary-color-white-97),

    "parttoc": "var(--primary-color)",
    "parttocactive": "var(--secondary-color)",
    "highlighttoc": "var(--secondary-color-white-10)",
    "chaptertoc": "var(--parttoc)",
    "documenttitle": "var(--primary-color)",
    "tocborder": "var(--primary-color-gray-50)",
    
    "bodytitle": "var(--primary-color-black-5)",
    
    "activated-content-bg": color.scale($secondary-color, $lightness: 90%),
    
    "goalborder": var(--secondary-color-white-20),
    "knowlbackground": var(--primary-color-white-96),
    "knowlborder": var(--primary-color-white-40),

    //"buttonhover": "var(--secondary-color-white-80)",
  )
);