// A version of default-modern theme with a centered layout and a configurable max width.

@use "sass:map";

$palette: 'dual' !default;
$primary-color: #2a5ea4 !default;
$secondary-color: #a11c1c !default;
$primary-color-dark: #829ab1 !default;
$background-color-dark: #23241f !default;

// Imports in this file can be either relative to this file or 
// relative to css/ directory
@use 'components/pretext';
@use 'components/chunks/chunks-default';

// wide specific
@use 'structural';
@use 'style';

@use '../default-modern/heading-tweaks.scss' with ($palette: $palette);

// fonts and colors
// $body-font: 'Open Sans' !default;
// $heading-font: 'Roboto' !default;
@use 'fonts/fonts-google'; // with ($body: $body-font, $heading: $heading-font);

@use "colors/color-helpers" as colorHelpers;
@use 'colors/palette-single' as palette-single with (
    $primary-color: $primary-color,
);
@use 'colors/palette-dual' as palette-dual with (
    $primary-color: $primary-color,
    $secondary-color: $secondary-color,
);
@use 'colors/palette-muted' as palette-muted with (
    $primary-color: $primary-color,
);
@use 'colors/palette-dark' as palette-dark with (
    $primary-color: $primary-color-dark,
    $background-color: $background-color-dark,
);


palette-dual.$colors: map.merge(palette-dual.$colors, (
    "mainbackground": "white",
    "page-color": "#e6e6e6",
    // "rs-component-bg": "none",
));

palette-single.$colors: map.merge(palette-dual.$colors, (
    "mainbackground": "white",
    "page-color": "#e6e6e6",
    // "rs-component-bg": "none",
));

palette-muted.$colors: map.merge(palette-dual.$colors, (
    "mainbackground": "white",
    "page-color": "#e6e6e6",
    // "rs-component-bg": "none",
));


palette-dark.$colors: map.merge(palette-dark.$colors, (
    // "rs-component-bg": "none",
));

:root {
    color-scheme: light;
    &:not(.dark-mode) {  // prevent variable leak through to dark
        @if $palette == 'dual' {
            @include colorHelpers.scss-to-css(palette-dual.$colors);
        } @else if $palette == 'single' {
            @include colorHelpers.scss-to-css(palette-single.$colors);
        } @else if $palette == 'muted' {
            @include colorHelpers.scss-to-css(palette-muted.$colors);
        }
    }
}

:root.dark-mode {
    color-scheme: dark;

    @include colorHelpers.scss-to-css(palette-dark.$colors);
}
